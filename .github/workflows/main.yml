name: Create Jira Ticket for IAM Access Request

on:
  workflow_dispatch:
    inputs:
      iam_user_id:
        description: 'Enter the IAM User ID'
        required: true
      iam_user_name:
        description: 'Enter the IAM User Name'
        required: true
      services:
        description: 'Enter required services (comma-separated; options: s3, ec2)'
        required: true
        default: 's3'
      access:
        description: 'Enter access type (read or write)'
        required: true
        default: 'read'
      assignee_account_id:
        description: 'Enter the Assignee Account ID'
        required: true

jobs:
  create_ticket:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Jira Ticket
        id: create_jira
        run: |
          echo "Creating Jira ticket..."
          
          # Build the JSON payload using jq
          payload=$(jq -n \
            --arg projectKey "${{ secrets.JIRA_PROJECT_KEY }}" \
            --arg summary "IAM Access Request for ${{ github.event.inputs.iam_user_name }}" \
            --arg description "IAM User ID: ${{ github.event.inputs.iam_user_id }}\nIAM User Name: ${{ github.event.inputs.iam_user_name }}\nServices: ${{ github.event.inputs.services }}\nAccess: ${{ github.event.inputs.access }}\nApprover: mubeen" \
            --arg assignee "${{ github.event.inputs.assignee_account_id }}" \
            --arg iamusername "${{ github.event.inputs.iam_user_name }}" \
            --arg iamuserid "${{ github.event.inputs.iam_user_id }}" \
            --arg servicesrequested "${{ github.event.inputs.services }}" \
            --arg accesslevel "${{ github.event.inputs.access }}" \
            '{
              fields: {
                project: { key: $projectKey },
                summary: $summary,
                description: $description,
                issuetype: { name: "Task" },
                assignee: { accountId: $assignee },
                labels: ["automation_done_by_statusneo"],
                customfield_10037: $iamusername,
                customfield_10038: $iamuserid,
                customfield_10039: $servicesrequested,
                customfield_10040: $accesslevel
              }
            }')
          
          echo "$payload"
          
          # Post to Jira using the REST API
          response=$(curl -s -w "\n%{http_code}" -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
            -X POST -H "Content-Type: application/json" --data "$payload" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/latest/issue")
          
          # Separate response body and HTTP status code
          http_code=$(echo "$response" | tail -n1)
          body=$(echo "$response" | sed '$d')
          
          if [ "$http_code" -ne 201 ]; then
            echo "Failed to create Jira ticket: $body"
            exit 1
          else
            echo "Jira ticket created successfully: $body"
            ticket_key=$(echo "$body" | jq -r '.key')
            echo "ticket_key=$ticket_key" >> $GITHUB_OUTPUT
          fi



